// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace events {
class EventMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventMessage>
      _instance;
} _EventMessage_default_instance_;
class ConfirmEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfirmEvent>
      _instance;
} _ConfirmEvent_default_instance_;
class RefreshRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefreshRequest>
      _instance;
} _RefreshRequest_default_instance_;
}  // namespace events
namespace protobuf_messages_2eproto {
static void InitDefaultsEventMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::events::_EventMessage_default_instance_;
    new (ptr) ::events::EventMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::events::EventMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventMessage}, {}};

static void InitDefaultsConfirmEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::events::_ConfirmEvent_default_instance_;
    new (ptr) ::events::ConfirmEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::events::ConfirmEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfirmEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfirmEvent}, {}};

static void InitDefaultsRefreshRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::events::_RefreshRequest_default_instance_;
    new (ptr) ::events::RefreshRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::events::RefreshRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefreshRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefreshRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EventMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfirmEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RefreshRequest.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::EventMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::EventMessage, datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::EventMessage, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::EventMessage, test_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::ConfirmEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::ConfirmEvent, eventid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::RefreshRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::RefreshRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::events::RefreshRequest, new__),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::events::EventMessage)},
  { 8, -1, sizeof(::events::ConfirmEvent)},
  { 14, -1, sizeof(::events::RefreshRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::events::_EventMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::events::_ConfirmEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::events::_RefreshRequest_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\022\006events\"@\n\014EventMessage"
      "\022\020\n\010datetime\030\001 \001(\003\022\020\n\010priority\030\002 \001(\005\022\014\n\004"
      "test\030\003 \001(\t\"\037\n\014ConfirmEvent\022\017\n\007eventId\030\001 "
      "\001(\003\")\n\016RefreshRequest\022\n\n\002id\030\001 \003(\003\022\013\n\003new"
      "\030\002 \003(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto
namespace events {

// ===================================================================

void EventMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventMessage::kDatetimeFieldNumber;
const int EventMessage::kPriorityFieldNumber;
const int EventMessage::kTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventMessage::EventMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_EventMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:events.EventMessage)
}
EventMessage::EventMessage(const EventMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test().size() > 0) {
    test_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_);
  }
  ::memcpy(&datetime_, &from.datetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_) -
    reinterpret_cast<char*>(&datetime_)) + sizeof(priority_));
  // @@protoc_insertion_point(copy_constructor:events.EventMessage)
}

void EventMessage::SharedCtor() {
  test_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&datetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&datetime_)) + sizeof(priority_));
}

EventMessage::~EventMessage() {
  // @@protoc_insertion_point(destructor:events.EventMessage)
  SharedDtor();
}

void EventMessage::SharedDtor() {
  test_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventMessage::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventMessage& EventMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_EventMessage.base);
  return *internal_default_instance();
}


void EventMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:events.EventMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&datetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&datetime_)) + sizeof(priority_));
  _internal_metadata_.Clear();
}

bool EventMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:events.EventMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 datetime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test().data(), static_cast<int>(this->test().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "events.EventMessage.test"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:events.EventMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:events.EventMessage)
  return false;
#undef DO_
}

void EventMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:events.EventMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 datetime = 1;
  if (this->datetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->datetime(), output);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority(), output);
  }

  // string test = 3;
  if (this->test().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test().data(), static_cast<int>(this->test().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "events.EventMessage.test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->test(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:events.EventMessage)
}

::google::protobuf::uint8* EventMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:events.EventMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 datetime = 1;
  if (this->datetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->datetime(), target);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority(), target);
  }

  // string test = 3;
  if (this->test().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test().data(), static_cast<int>(this->test().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "events.EventMessage.test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->test(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:events.EventMessage)
  return target;
}

size_t EventMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:events.EventMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string test = 3;
  if (this->test().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test());
  }

  // int64 datetime = 1;
  if (this->datetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datetime());
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:events.EventMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const EventMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:events.EventMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:events.EventMessage)
    MergeFrom(*source);
  }
}

void EventMessage::MergeFrom(const EventMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:events.EventMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.test().size() > 0) {

    test_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_);
  }
  if (from.datetime() != 0) {
    set_datetime(from.datetime());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void EventMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:events.EventMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventMessage::CopyFrom(const EventMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:events.EventMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventMessage::IsInitialized() const {
  return true;
}

void EventMessage::Swap(EventMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventMessage::InternalSwap(EventMessage* other) {
  using std::swap;
  test_.Swap(&other->test_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(datetime_, other->datetime_);
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventMessage::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfirmEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmEvent::kEventIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmEvent::ConfirmEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_ConfirmEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:events.ConfirmEvent)
}
ConfirmEvent::ConfirmEvent(const ConfirmEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:events.ConfirmEvent)
}

void ConfirmEvent::SharedCtor() {
  eventid_ = GOOGLE_LONGLONG(0);
}

ConfirmEvent::~ConfirmEvent() {
  // @@protoc_insertion_point(destructor:events.ConfirmEvent)
  SharedDtor();
}

void ConfirmEvent::SharedDtor() {
}

void ConfirmEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfirmEvent::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmEvent& ConfirmEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_ConfirmEvent.base);
  return *internal_default_instance();
}


void ConfirmEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:events.ConfirmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ConfirmEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:events.ConfirmEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 eventId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:events.ConfirmEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:events.ConfirmEvent)
  return false;
#undef DO_
}

void ConfirmEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:events.ConfirmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 eventId = 1;
  if (this->eventid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->eventid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:events.ConfirmEvent)
}

::google::protobuf::uint8* ConfirmEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:events.ConfirmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 eventId = 1;
  if (this->eventid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->eventid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:events.ConfirmEvent)
  return target;
}

size_t ConfirmEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:events.ConfirmEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 eventId = 1;
  if (this->eventid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->eventid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfirmEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:events.ConfirmEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:events.ConfirmEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:events.ConfirmEvent)
    MergeFrom(*source);
  }
}

void ConfirmEvent::MergeFrom(const ConfirmEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:events.ConfirmEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventid() != 0) {
    set_eventid(from.eventid());
  }
}

void ConfirmEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:events.ConfirmEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmEvent::CopyFrom(const ConfirmEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:events.ConfirmEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmEvent::IsInitialized() const {
  return true;
}

void ConfirmEvent::Swap(ConfirmEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmEvent::InternalSwap(ConfirmEvent* other) {
  using std::swap;
  swap(eventid_, other->eventid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfirmEvent::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefreshRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshRequest::kIdFieldNumber;
const int RefreshRequest::kNewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshRequest::RefreshRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_RefreshRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:events.RefreshRequest)
}
RefreshRequest::RefreshRequest(const RefreshRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      new__(from.new__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:events.RefreshRequest)
}

void RefreshRequest::SharedCtor() {
}

RefreshRequest::~RefreshRequest() {
  // @@protoc_insertion_point(destructor:events.RefreshRequest)
  SharedDtor();
}

void RefreshRequest::SharedDtor() {
}

void RefreshRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefreshRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshRequest& RefreshRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_RefreshRequest.base);
  return *internal_default_instance();
}


void RefreshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:events.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.Clear();
  new__.Clear();
  _internal_metadata_.Clear();
}

bool RefreshRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:events.RefreshRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 new = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_new_())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_new_())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:events.RefreshRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:events.RefreshRequest)
  return false;
#undef DO_
}

void RefreshRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:events.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 id = 1;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_cached_byte_size_));
  }
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->id(i), output);
  }

  // repeated int64 new = 2;
  if (this->new__size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _new__cached_byte_size_));
  }
  for (int i = 0, n = this->new__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->new_(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:events.RefreshRequest)
}

::google::protobuf::uint8* RefreshRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:events.RefreshRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 id = 1;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->id_, target);
  }

  // repeated int64 new = 2;
  if (this->new__size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _new__cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->new__, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:events.RefreshRequest)
  return target;
}

size_t RefreshRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:events.RefreshRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 new = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->new__);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _new__cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:events.RefreshRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:events.RefreshRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:events.RefreshRequest)
    MergeFrom(*source);
  }
}

void RefreshRequest::MergeFrom(const RefreshRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:events.RefreshRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  new__.MergeFrom(from.new__);
}

void RefreshRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:events.RefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshRequest::CopyFrom(const RefreshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:events.RefreshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshRequest::IsInitialized() const {
  return true;
}

void RefreshRequest::Swap(RefreshRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshRequest::InternalSwap(RefreshRequest* other) {
  using std::swap;
  id_.InternalSwap(&other->id_);
  new__.InternalSwap(&other->new__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefreshRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace events
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::events::EventMessage* Arena::CreateMaybeMessage< ::events::EventMessage >(Arena* arena) {
  return Arena::CreateInternal< ::events::EventMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::events::ConfirmEvent* Arena::CreateMaybeMessage< ::events::ConfirmEvent >(Arena* arena) {
  return Arena::CreateInternal< ::events::ConfirmEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::events::RefreshRequest* Arena::CreateMaybeMessage< ::events::RefreshRequest >(Arena* arena) {
  return Arena::CreateInternal< ::events::RefreshRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
