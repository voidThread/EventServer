// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_INCLUDED_messages_2eproto
#define PROTOBUF_INCLUDED_messages_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto 

namespace protobuf_messages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_messages_2eproto
namespace events {
class ConfirmEvent;
class ConfirmEventDefaultTypeInternal;
extern ConfirmEventDefaultTypeInternal _ConfirmEvent_default_instance_;
class EventMessage;
class EventMessageDefaultTypeInternal;
extern EventMessageDefaultTypeInternal _EventMessage_default_instance_;
class RefreshRequest;
class RefreshRequestDefaultTypeInternal;
extern RefreshRequestDefaultTypeInternal _RefreshRequest_default_instance_;
}  // namespace events
namespace google {
namespace protobuf {
template<> ::events::ConfirmEvent* Arena::CreateMaybeMessage<::events::ConfirmEvent>(Arena*);
template<> ::events::EventMessage* Arena::CreateMaybeMessage<::events::EventMessage>(Arena*);
template<> ::events::RefreshRequest* Arena::CreateMaybeMessage<::events::RefreshRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace events {

// ===================================================================

class EventMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:events.EventMessage) */ {
 public:
  EventMessage();
  virtual ~EventMessage();

  EventMessage(const EventMessage& from);

  inline EventMessage& operator=(const EventMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventMessage(EventMessage&& from) noexcept
    : EventMessage() {
    *this = ::std::move(from);
  }

  inline EventMessage& operator=(EventMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventMessage* internal_default_instance() {
    return reinterpret_cast<const EventMessage*>(
               &_EventMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EventMessage* other);
  friend void swap(EventMessage& a, EventMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventMessage* New() const final {
    return CreateMaybeMessage<EventMessage>(NULL);
  }

  EventMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventMessage& from);
  void MergeFrom(const EventMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string test = 3;
  void clear_test();
  static const int kTestFieldNumber = 3;
  const ::std::string& test() const;
  void set_test(const ::std::string& value);
  #if LANG_CXX11
  void set_test(::std::string&& value);
  #endif
  void set_test(const char* value);
  void set_test(const char* value, size_t size);
  ::std::string* mutable_test();
  ::std::string* release_test();
  void set_allocated_test(::std::string* test);

  // int64 datetime = 1;
  void clear_datetime();
  static const int kDatetimeFieldNumber = 1;
  ::google::protobuf::int64 datetime() const;
  void set_datetime(::google::protobuf::int64 value);

  // int32 priority = 2;
  void clear_priority();
  static const int kPriorityFieldNumber = 2;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:events.EventMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr test_;
  ::google::protobuf::int64 datetime_;
  ::google::protobuf::int32 priority_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:events.ConfirmEvent) */ {
 public:
  ConfirmEvent();
  virtual ~ConfirmEvent();

  ConfirmEvent(const ConfirmEvent& from);

  inline ConfirmEvent& operator=(const ConfirmEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfirmEvent(ConfirmEvent&& from) noexcept
    : ConfirmEvent() {
    *this = ::std::move(from);
  }

  inline ConfirmEvent& operator=(ConfirmEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfirmEvent* internal_default_instance() {
    return reinterpret_cast<const ConfirmEvent*>(
               &_ConfirmEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConfirmEvent* other);
  friend void swap(ConfirmEvent& a, ConfirmEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfirmEvent* New() const final {
    return CreateMaybeMessage<ConfirmEvent>(NULL);
  }

  ConfirmEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfirmEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfirmEvent& from);
  void MergeFrom(const ConfirmEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfirmEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 eventId = 1;
  void clear_eventid();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::int64 eventid() const;
  void set_eventid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:events.ConfirmEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 eventid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:events.RefreshRequest) */ {
 public:
  RefreshRequest();
  virtual ~RefreshRequest();

  RefreshRequest(const RefreshRequest& from);

  inline RefreshRequest& operator=(const RefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshRequest(RefreshRequest&& from) noexcept
    : RefreshRequest() {
    *this = ::std::move(from);
  }

  inline RefreshRequest& operator=(RefreshRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RefreshRequest* internal_default_instance() {
    return reinterpret_cast<const RefreshRequest*>(
               &_RefreshRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RefreshRequest* other);
  friend void swap(RefreshRequest& a, RefreshRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshRequest* New() const final {
    return CreateMaybeMessage<RefreshRequest>(NULL);
  }

  RefreshRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RefreshRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RefreshRequest& from);
  void MergeFrom(const RefreshRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RefreshRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id(int index) const;
  void set_id(int index, ::google::protobuf::int64 value);
  void add_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_id();

  // repeated int64 new = 2;
  int new__size() const;
  void clear_new_();
  static const int kNewFieldNumber = 2;
  ::google::protobuf::int64 new_(int index) const;
  void set_new_(int index, ::google::protobuf::int64 value);
  void add_new_(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      new_() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_new_();

  // @@protoc_insertion_point(class_scope:events.RefreshRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > id_;
  mutable int _id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > new__;
  mutable int _new__cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EventMessage

// int64 datetime = 1;
inline void EventMessage::clear_datetime() {
  datetime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EventMessage::datetime() const {
  // @@protoc_insertion_point(field_get:events.EventMessage.datetime)
  return datetime_;
}
inline void EventMessage::set_datetime(::google::protobuf::int64 value) {
  
  datetime_ = value;
  // @@protoc_insertion_point(field_set:events.EventMessage.datetime)
}

// int32 priority = 2;
inline void EventMessage::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 EventMessage::priority() const {
  // @@protoc_insertion_point(field_get:events.EventMessage.priority)
  return priority_;
}
inline void EventMessage::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:events.EventMessage.priority)
}

// string test = 3;
inline void EventMessage::clear_test() {
  test_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EventMessage::test() const {
  // @@protoc_insertion_point(field_get:events.EventMessage.test)
  return test_.GetNoArena();
}
inline void EventMessage::set_test(const ::std::string& value) {
  
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:events.EventMessage.test)
}
#if LANG_CXX11
inline void EventMessage::set_test(::std::string&& value) {
  
  test_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:events.EventMessage.test)
}
#endif
inline void EventMessage::set_test(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:events.EventMessage.test)
}
inline void EventMessage::set_test(const char* value, size_t size) {
  
  test_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:events.EventMessage.test)
}
inline ::std::string* EventMessage::mutable_test() {
  
  // @@protoc_insertion_point(field_mutable:events.EventMessage.test)
  return test_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventMessage::release_test() {
  // @@protoc_insertion_point(field_release:events.EventMessage.test)
  
  return test_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventMessage::set_allocated_test(::std::string* test) {
  if (test != NULL) {
    
  } else {
    
  }
  test_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test);
  // @@protoc_insertion_point(field_set_allocated:events.EventMessage.test)
}

// -------------------------------------------------------------------

// ConfirmEvent

// int64 eventId = 1;
inline void ConfirmEvent::clear_eventid() {
  eventid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfirmEvent::eventid() const {
  // @@protoc_insertion_point(field_get:events.ConfirmEvent.eventId)
  return eventid_;
}
inline void ConfirmEvent::set_eventid(::google::protobuf::int64 value) {
  
  eventid_ = value;
  // @@protoc_insertion_point(field_set:events.ConfirmEvent.eventId)
}

// -------------------------------------------------------------------

// RefreshRequest

// repeated int64 id = 1;
inline int RefreshRequest::id_size() const {
  return id_.size();
}
inline void RefreshRequest::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int64 RefreshRequest::id(int index) const {
  // @@protoc_insertion_point(field_get:events.RefreshRequest.id)
  return id_.Get(index);
}
inline void RefreshRequest::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:events.RefreshRequest.id)
}
inline void RefreshRequest::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:events.RefreshRequest.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
RefreshRequest::id() const {
  // @@protoc_insertion_point(field_list:events.RefreshRequest.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
RefreshRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:events.RefreshRequest.id)
  return &id_;
}

// repeated int64 new = 2;
inline int RefreshRequest::new__size() const {
  return new__.size();
}
inline void RefreshRequest::clear_new_() {
  new__.Clear();
}
inline ::google::protobuf::int64 RefreshRequest::new_(int index) const {
  // @@protoc_insertion_point(field_get:events.RefreshRequest.new)
  return new__.Get(index);
}
inline void RefreshRequest::set_new_(int index, ::google::protobuf::int64 value) {
  new__.Set(index, value);
  // @@protoc_insertion_point(field_set:events.RefreshRequest.new)
}
inline void RefreshRequest::add_new_(::google::protobuf::int64 value) {
  new__.Add(value);
  // @@protoc_insertion_point(field_add:events.RefreshRequest.new)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
RefreshRequest::new_() const {
  // @@protoc_insertion_point(field_list:events.RefreshRequest.new)
  return new__;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
RefreshRequest::mutable_new_() {
  // @@protoc_insertion_point(field_mutable_list:events.RefreshRequest.new)
  return &new__;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace events

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_messages_2eproto
